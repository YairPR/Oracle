--Archived logs stuck ‘in-memory’ when building a standby

*/
The documentation for the applied column states the following :-

Indicates whether an archived redo log file has been applied to the corresponding physical standby database. The value is 
always NO for local destinations.

This column is meaningful on a physical standby database for rows where REGISTRAR = RFS:

If REGISTRAR = RFS and APPLIED = NO, then the log file has been received but has not yet been applied.
If REGISTRAR = RFS and APPLIED = IN-MEMORY, then the log file has been applied in memory, but the datafiles have not yet 
been updated.If REGISTRAR = RFS and APPLIED = YES, then the log file has been applied and the datafiles have been updated.
So the logs had been applied but the datafiles had not been updated. We waited a long time and more logs came along from the 
primary system and the applied column showed YES but the older ones did not change. We were convinced that the logs had been 
applied but how could we be sure. However one of our contractors got involved and said he had seen this elsewhere and if we 
bounced the instance then all would be well. We of course ignored him for thirty minutes and having found no other 
explanation did what he suggested. Cancel managed recovery, restart the instance and then restart managed recovery. Then all 
the logs, from both threads showed YES in the applied colun bar the latest logs.

At UKOUG I managed to get the chance to ask Larry Carpenter about this and he thought he had heard something about it and 
said it was likely to be a bug. I have searched MoS and Google but no further confirmation on this. Hopefully this may help 
someone else in the same position and if anybody has any more information please update me.

*/

column "First Time" format A40
column applied format A10
column "Next Time" format A40
set linesize 120
set pagesize 1000
 
select   thread#, sequence#,       applied,
to_char(first_time,'DD-MON-YY:HH24:MI:SS') "First Time",
to_char(next_time,'DD-MON-YY:HH24:MI:SS') "Next Time"
from      v$archived_log
UNION
select   NULL,NULL,' ',NULL,null FROM DUAL
UNION
select   null,null,
db_unique_name,
database_role,
open_mode
from      v$database
/
